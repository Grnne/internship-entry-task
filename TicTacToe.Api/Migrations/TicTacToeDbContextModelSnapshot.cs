// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TicTacToe.Api.Data;

#nullable disable

namespace TicTacToe.Api.Migrations
{
    [DbContext(typeof(TicTacToeDbContext))]
    partial class TicTacToeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TicTacToe.Api.Data.Entities.Cell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CellState")
                        .HasColumnType("integer")
                        .HasColumnName("cell_state");

                    b.Property<int>("GameId")
                        .HasColumnType("integer")
                        .HasColumnName("game_id");

                    b.Property<int>("X")
                        .HasColumnType("integer")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("integer")
                        .HasColumnName("y");

                    b.HasKey("Id")
                        .HasName("pk_cells");

                    b.HasIndex("GameId")
                        .HasDatabaseName("ix_cells_game_id");

                    b.ToTable("cells", (string)null);
                });

            modelBuilder.Entity("TicTacToe.Api.Data.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BoardHeight")
                        .HasColumnType("integer")
                        .HasColumnName("board_height");

                    b.Property<int>("BoardWidth")
                        .HasColumnType("integer")
                        .HasColumnName("board_width");

                    b.Property<int>("CurrentTurn")
                        .HasColumnType("integer")
                        .HasColumnName("current_turn");

                    b.Property<int>("FilledCellsCount")
                        .HasColumnType("integer")
                        .HasColumnName("filled_cells_count");

                    b.Property<int>("GameState")
                        .HasColumnType("integer")
                        .HasColumnName("game_state");

                    b.Property<int>("PlayerOId")
                        .HasColumnType("integer")
                        .HasColumnName("player_o_id");

                    b.Property<int>("PlayerXId")
                        .HasColumnType("integer")
                        .HasColumnName("player_x_id");

                    b.Property<int>("WinLength")
                        .HasColumnType("integer")
                        .HasColumnName("win_length");

                    b.HasKey("Id")
                        .HasName("pk_games");

                    b.ToTable("games", (string)null);
                });

            modelBuilder.Entity("TicTacToe.Api.Data.Entities.Move", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CurrentTurn")
                        .HasColumnType("integer")
                        .HasColumnName("current_turn");

                    b.Property<int>("GameId")
                        .HasColumnType("integer")
                        .HasColumnName("game_id");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer")
                        .HasColumnName("player_id");

                    b.Property<int>("X")
                        .HasColumnType("integer")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("integer")
                        .HasColumnName("y");

                    b.HasKey("Id")
                        .HasName("pk_moves");

                    b.HasIndex("GameId", "PlayerId", "X", "Y")
                        .IsUnique()
                        .HasDatabaseName("ix_moves_game_id_player_id_x_y");

                    b.ToTable("moves", (string)null);
                });

            modelBuilder.Entity("TicTacToe.Api.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("TicTacToe.Api.Data.Entities.Cell", b =>
                {
                    b.HasOne("TicTacToe.Api.Data.Entities.Game", "Game")
                        .WithMany("Cells")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cells_games_game_id");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("TicTacToe.Api.Data.Entities.Move", b =>
                {
                    b.HasOne("TicTacToe.Api.Data.Entities.Game", "Game")
                        .WithMany("Moves")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_moves_games_game_id");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("TicTacToe.Api.Data.Entities.Game", b =>
                {
                    b.Navigation("Cells");

                    b.Navigation("Moves");
                });
#pragma warning restore 612, 618
        }
    }
}
